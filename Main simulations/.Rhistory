path <- "/Users/jonathanluu/Library/CloudStorage/Dropbox/Caring Health/Data/Caring_Data_V2.xlsx"
dat <- lapply(excel_sheets(path = path), function(x)
read_excel(path = path, sheet = x, col_types = c(rep("guess",20),"text","logical")))
dat <- bind_rows(dat)
# Create categorical visit
dat <- dat %>% mutate(cat_visit = case_when(num_of_visits <= 1 ~ 0,
num_of_visits > 1 & num_of_visits <= 3 ~ 1,
num_of_visits > 3 & num_of_visits <= 8 ~ 2,
num_of_visits > 9 ~ 3))
# Create categorical age
dat <- dat %>% mutate(cat_age = case_when(Age <= 39 ~ 0,
Age > 39 & Age <= 64 ~ 1,
Age > 65 ~ 2))
# Rename some columns
dat <- rename(dat, Language = "LANGUAGE_NAME", Ethnicity = "ETHNIC_GROUP", Race = "RACE")
# Format dates
dat <- dat %>% mutate(ENC_DATE = ymd(ENC_DATE), Last_Visit_Date = ymd(Last_Visit_Date))
# Get distinct IDs
dat.distinct <- dat %>% distinct(PAT_ID, .keep_all = T)
# Create new dataset showing number of responses by id and encounter
dat.resp.enc <- dat %>% count(PAT_ID, DOMAIN_GRP, ENC_DATE) %>% mutate_all(na_if,"") %>%
pivot_wider(names_from = DOMAIN_GRP, values_from = n)
dat.resp.enc <- dat.resp.enc %>% mutate_if(is.integer, ~replace(.,is.na(.),0))
dat.resp.enc <- dat.resp.enc %>% select(-"NA") %>% mutate(sum = rowSums(across(where(is.numeric))))
covar <- dat.distinct %>% select(PAT_ID, cat_age, cat_visit, Race, Ethnicity, Language, HasChargeVisit)
dat.resp.enc <- merge(dat.resp.enc,covar,all.x=T)
screen.count <- dat.resp.enc %>% filter(sum>0) %>% count(PAT_ID)
dat.resp.enc <- full_join(dat.resp.enc, screen.count, by="PAT_ID") %>% rename("n_encounter" = "n") # Append number of encounters to dataset
# Create dataset of those screened
response_ids <- dat.resp.enc %>% filter(sum > 0) %>% distinct(PAT_ID) %>% c() %>% .[[1]]
dat.resp <- dat %>% filter(PAT_ID %in% response_ids)
dat.resp.distinct <- dat.resp %>% distinct(PAT_ID, .keep_all = T)
View(dat)
View(dat.distinct)
View(dat.resp.distinct)
View(dat.distinct)
View(dat.distinct)
View(dat.resp.distinct)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, comment = NA)
library(tidyverse)
library(readxl)
library(lubridate)
# Read in data
#path <- "C:\\Users\\Jonathan\\Dropbox\\Caring Health\\Data\\Caring_Data_V2.xlsx"
path <- "/Users/jonathanluu/Library/CloudStorage/Dropbox/Caring Health/Data/Caring_Data_V2.xlsx"
dat <- lapply(excel_sheets(path = path), function(x)
read_excel(path = path, sheet = x, col_types = c(rep("guess",20),"text","logical")))
dat <- bind_rows(dat)
# Create categorical visit
dat <- dat %>% mutate(cat_visit = case_when(num_of_visits <= 1 ~ 0,
num_of_visits > 1 & num_of_visits <= 3 ~ 1,
num_of_visits > 3 & num_of_visits <= 8 ~ 2,
num_of_visits > 9 ~ 3))
# Create categorical age
dat <- dat %>% mutate(cat_age = case_when(Age <= 39 ~ 0,
Age > 39 & Age <= 64 ~ 1,
Age > 65 ~ 2))
# Rename some columns
dat <- rename(dat, Language = "LANGUAGE_NAME", Ethnicity = "ETHNIC_GROUP", Race = "RACE")
# Format dates
dat <- dat %>% mutate(ENC_DATE = ymd(ENC_DATE), Last_Visit_Date = ymd(Last_Visit_Date))
# Get distinct IDs
dat.distinct <- dat %>% distinct(PAT_ID, .keep_all = T)
# Create new dataset showing number of responses by id and encounter
dat.encounter <- dat %>% count(PAT_ID, DOMAIN_GRP, ENC_DATE) %>% mutate_all(na_if,"") %>%
pivot_wider(names_from = DOMAIN_GRP, values_from = n)
dat.encounter <- dat.encounter %>% mutate_if(is.integer, ~replace(.,is.na(.),0))
dat.encounter <- dat.encounter %>% select(-"NA") %>% mutate(sum = rowSums(across(where(is.numeric))))
covar <- dat.distinct %>% select(PAT_ID, cat_age, cat_visit, Race, Ethnicity, Language, HasChargeVisit)
dat.encounter <- merge(dat.encounter,covar,all.x=T)
screen.count <- dat.encounter %>% filter(sum>0) %>% count(PAT_ID)
dat.encounter <- full_join(dat.encounter, screen.count, by="PAT_ID") %>% rename("n_encounter" = "n") # Append number of encounters to dataset
# Create dataset of those screened
response_ids <- dat.encounter %>% filter(sum > 0) %>% distinct(PAT_ID) %>% c() %>% .[[1]]
dat.screened <- dat %>% filter(PAT_ID %in% response_ids)
dat.distinct.screened <- dat.screened %>% distinct(PAT_ID, .keep_all = T)
###Patients
length(unique(dat.distinct$PAT_ID)) #32421 individuals
dat.distinct.screened %>% nrow() # 8941 screened
dat.encounter %>% filter(sum==0) %>% select(PAT_ID) %>% unique() %>% nrow() # 23480 not screened
###Preferred language
# All
dat.distinct$Language %>% table() %>% sort(decreasing = T) %>%
head(n=6) %>% as_tibble() %>% rename(Language=".") # Most popular languages
dat.distinct$Language %>% table() %>% sort(decreasing = T) %>%
.[7:(length(unique(dat.distinct$Language))-1)] %>% sum() # Other language
# Screened
dat.distinct.screened$Language %>% table() %>% sort(decreasing = T) %>%
head(n=6) %>% as_tibble() %>% rename(Language=".") # Most popular languages
dat.distinct.screened$Language %>% table() %>% sort(decreasing = T) %>%
.[7:(length(unique(dat.distinct.screened$Language))-1)] %>% sum() # Other language
### Ethnicity
# All
dat.distinct$Ethnicity %>% table() %>% as.data.frame() %>% rename(Ethnicity=".")
# Screened
dat.distinct.screened$Ethnicity %>% table() %>% as.data.frame() %>% rename(Ethnicity=".")
### Race
# All
dat.distinct$Race %>% table() %>% sort(decreasing = T) %>% as.data.frame() %>% rename(Race=".")
# Screened
dat.distinct.screened$Race %>% table() %>% sort(decreasing = T) %>% as.data.frame() %>% rename(Race=".")
### Age category
dat.distinct$cat_age
# Age distribution
dat.distinct$Age %>% summary()
dat.distinct$Age
View(dat.distinct)
# Create categorical age
dat <- dat %>% mutate(cat_age = case_when(Age <= 39 ~ 0,
Age > 39 & Age <= 64 ~ 1,
Age > 64 ~ 2))
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, comment = NA)
library(tidyverse)
library(readxl)
library(lubridate)
# Read in data
#path <- "C:\\Users\\Jonathan\\Dropbox\\Caring Health\\Data\\Caring_Data_V2.xlsx"
path <- "/Users/jonathanluu/Library/CloudStorage/Dropbox/Caring Health/Data/Caring_Data_V2.xlsx"
dat <- lapply(excel_sheets(path = path), function(x)
read_excel(path = path, sheet = x, col_types = c(rep("guess",20),"text","logical")))
dat <- bind_rows(dat)
# Create categorical visit
dat <- dat %>% mutate(cat_visit = case_when(num_of_visits <= 1 ~ 0,
num_of_visits > 1 & num_of_visits <= 3 ~ 1,
num_of_visits > 3 & num_of_visits <= 8 ~ 2,
num_of_visits > 9 ~ 3))
# Create categorical age
dat <- dat %>% mutate(cat_age = case_when(Age <= 39 ~ 0,
Age > 39 & Age <= 64 ~ 1,
Age > 64 ~ 2))
# Rename some columns
dat <- rename(dat, Language = "LANGUAGE_NAME", Ethnicity = "ETHNIC_GROUP", Race = "RACE")
# Format dates
dat <- dat %>% mutate(ENC_DATE = ymd(ENC_DATE), Last_Visit_Date = ymd(Last_Visit_Date))
# Get distinct IDs
dat.distinct <- dat %>% distinct(PAT_ID, .keep_all = T)
# Create new dataset showing number of responses by id and encounter
dat.encounter <- dat %>% count(PAT_ID, DOMAIN_GRP, ENC_DATE) %>% mutate_all(na_if,"") %>%
pivot_wider(names_from = DOMAIN_GRP, values_from = n)
dat.encounter <- dat.encounter %>% mutate_if(is.integer, ~replace(.,is.na(.),0))
dat.encounter <- dat.encounter %>% select(-"NA") %>% mutate(sum = rowSums(across(where(is.numeric))))
covar <- dat.distinct %>% select(PAT_ID, cat_age, cat_visit, Race, Ethnicity, Language, HasChargeVisit)
dat.encounter <- merge(dat.encounter,covar,all.x=T)
screen.count <- dat.encounter %>% filter(sum>0) %>% count(PAT_ID)
dat.encounter <- full_join(dat.encounter, screen.count, by="PAT_ID") %>% rename("n_encounter" = "n") # Append number of encounters to dataset
# Create dataset of those screened
response_ids <- dat.encounter %>% filter(sum > 0) %>% distinct(PAT_ID) %>% c() %>% .[[1]]
dat.screened <- dat %>% filter(PAT_ID %in% response_ids)
dat.distinct.screened <- dat.screened %>% distinct(PAT_ID, .keep_all = T)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, comment = NA)
library(tidyverse)
library(readxl)
library(lubridate)
# Read in data
#path <- "C:\\Users\\Jonathan\\Dropbox\\Caring Health\\Data\\Caring_Data_V2.xlsx"
path <- "/Users/jonathanluu/Library/CloudStorage/Dropbox/Caring Health/Data/Caring_Data_V2.xlsx"
dat <- lapply(excel_sheets(path = path), function(x)
read_excel(path = path, sheet = x, col_types = c(rep("guess",20),"text","logical")))
dat <- bind_rows(dat)
# Create categorical visit
dat <- dat %>% mutate(cat_visit = case_when(num_of_visits <= 1 ~ 0,
num_of_visits > 1 & num_of_visits <= 3 ~ 1,
num_of_visits > 3 & num_of_visits <= 8 ~ 2,
num_of_visits > 8 ~ 3))
# Create categorical age
dat <- dat %>% mutate(cat_age = case_when(Age <= 39 ~ 0,
Age > 39 & Age <= 64 ~ 1,
Age > 64 ~ 2))
# Rename some columns
dat <- rename(dat, Language = "LANGUAGE_NAME", Ethnicity = "ETHNIC_GROUP", Race = "RACE")
# Format dates
dat <- dat %>% mutate(ENC_DATE = ymd(ENC_DATE), Last_Visit_Date = ymd(Last_Visit_Date))
# Get distinct IDs
dat.distinct <- dat %>% distinct(PAT_ID, .keep_all = T)
# Create new dataset showing number of responses by id and encounter
dat.encounter <- dat %>% count(PAT_ID, DOMAIN_GRP, ENC_DATE) %>% mutate_all(na_if,"") %>%
pivot_wider(names_from = DOMAIN_GRP, values_from = n)
dat.encounter <- dat.encounter %>% mutate_if(is.integer, ~replace(.,is.na(.),0))
dat.encounter <- dat.encounter %>% select(-"NA") %>% mutate(sum = rowSums(across(where(is.numeric))))
covar <- dat.distinct %>% select(PAT_ID, cat_age, cat_visit, Race, Ethnicity, Language, HasChargeVisit)
dat.encounter <- merge(dat.encounter,covar,all.x=T)
screen.count <- dat.encounter %>% filter(sum>0) %>% count(PAT_ID)
dat.encounter <- full_join(dat.encounter, screen.count, by="PAT_ID") %>% rename("n_encounter" = "n") # Append number of encounters to dataset
# Create dataset of those screened
response_ids <- dat.encounter %>% filter(sum > 0) %>% distinct(PAT_ID) %>% c() %>% .[[1]]
dat.screened <- dat %>% filter(PAT_ID %in% response_ids)
dat.distinct.screened <- dat.screened %>% distinct(PAT_ID, .keep_all = T)
### Age category
dat.distinct$cat_age
### Age category
dat.distinct$cat_age %>% table()
# Screened
dat.distinct.screened$cat_age %>% table()
# Number of visits
dat.distinct$cat_visit %>% table()
# Screened
dat.distinct.screened$cat_visit %>% table()
dat$PCP_NAME %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("PCP Name"=".") %>% print(n=25)
dat$PCP_DEGREE %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("PCP Degree"=".")
dat$TakenProviderType %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Taken Provider Type"=".") # Provider type distribution
dat$EntryProviderType %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Entry Provider Type"=".") # Entry type distribution
# Screened
dat.screened %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Taken Provider Type"=".")
# Screened
dat.screened$TakenProviderType %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Taken Provider Type"=".")
### Provider type
# All
dat$TakenProviderType %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Taken Provider Type"=".")
dat.screened
dat
dat.screened
# Screened
dat.screened$TakenProviderType %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Taken Provider Type"=".")
### Provider type
# All
dat$TakenProviderType %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Taken Provider Type"=".")
dat.distinct.screened$num_of_visits
dat.encounter
View(dat.encounter)
dat.distinct.screened
View(dat.distinct.screened)
screen.count
### Screen count
screen.count$n %>% table()
### Screen count
screen.count$n %>% table() %>% sum
screen.count$n %>% table() %>% .[4]
screen.count$n %>% table() %>% .[4:9]
screen.count$n %>% table() %>% .[4:8]
screen.count$n %>% table() %>% .[4:8] %>% sum()
### Screen count
screen.count$n %>% table()
# Financial / other
nrow(dat.encounter %>% filter(`Financial/Other`>0) %>% select(PAT_ID) %>% unique())
View(dat.encounter)
# Relationship safety
nrow(dat.encounter %>% filter(`Relationship Safety`>0) %>% select(PAT_ID) %>% unique())
screeningNum <- function(category){
nrow(dat.encounter %>% filter(category>0) %>% select(PAT_ID) %>% unique())
}
colnames(dat.encounter)
colnames(dat.encounter)[3:14]
categories <- colnames(dat.encounter)[3:14]
categories[1]
sapply(categories, screeningNum)
screeningNum <- function(category){
browser()
nrow(dat.encounter %>% filter(category>0) %>% select(PAT_ID) %>% unique())
}
categories <- colnames(dat.encounter)[3:14]
sapply(categories, screeningNum)
category
dat.encounter %>% filter(category>0
)
sapply(categories, screeningNum)
category
dat.encounter$category
dat.encounter$'category'
dat.encounter$%category%
dat.encounter %>% select(category)
dat.encounter %>% select(PAT_ID, category)
dat.encounter
dat.encounter %>% select(category)
dat.encounter %>% select(category) > 0
dat.encounter %>% select(category) > 0 %>% sum
dat.encounter %>% select(category) > 0 %>% sum()
dat.encounter %>% select(category) %>% . > 0
temp <- dat.encounter %>% select(category)
temp
temp > 0
temp[temp>0]
temp[temp>0] %>% length()
screeningNum <- function(category){
uniq <- dat.encounter %>% select(category)
uniq[uniq>0] %>% length()
}
categories <- colnames(dat.encounter)[3:14]
sapply(categories, screeningNum)
screeningNum <- function(category){
browser()
uniq <- dat.encounter %>% select(category)
uniq[uniq>0] %>% length()
}
sapply(categories, screeningNum)
uniq <- dat.encounter %>% select(category)
uniq
uniq[uniq>0]
category = "Relationship Safety"
uniq <- dat.encounter %>% select(category)
uniq[uniq>0]
uniq <- dat.encounter %>% select(category)
uniq
dat.encounter
uniq <- dat.encounter %>% select(category, PAT_ID)
uniq
uniq[uniq[,1]>0]
uniq[,1]
uniq[,1]>0
uniq[uniq[,1]>0,]
uniq[uniq[,1]>0,] %>% length()
uniq[uniq[,1]>0,] %>% nrow()
uniq <- dat.encounter %>% select(category, PAT_ID)
ategory
category
uniq[uniq[,1]>0,]
uniq[uniq[,1]>0,] %>% distinct(PAT_ID, .keep_all=T)
uniq[uniq[,1]>0,] %>% distinct(PAT_ID, .keep_all=T) %>% nrow()
screeningNum <- function(category){
uniq <- dat.encounter %>% select(category, PAT_ID)
uniq[uniq[,1]>0,] %>% distinct(PAT_ID, .keep_all=T) %>% nrow()
}
categories <- colnames(dat.encounter)[3:14]
sapply(categories, screeningNum)
group.n <- dat.encounter %>% filter(sum>0)
group.n.id <- dat.encounter %>% select("Food Insecurity","Housing","Transportation","Stress and Social Isolation") > 0
group.n.id <- which(tibble(group.n.id) %>% apply(1,sum) == 4)
group.n <- dat.encounter %>% slice(group.n.id)
length(unique(group.n$PAT_ID)) # 5996 individuals with these 4 domain questions answered
dom.n <- dat.encounter %>% filter(sum>0)
dom.n.id <- dom.n %>% select(-c(PAT_ID,ENC_DATE,sum)) > 0
dom.n.id <- which(tibble(dom.n.id) %>% apply(1,sum) == 12)
dom.n <- dom.n %>% slice(dom.n.id)
length(unique(dom.n$PAT_ID)) # 2120 individuals with all domain questions answered
# People who answered a question in all domains
dom.n <- dat.encounter %>% filter(sum>0)
dom.n
dom.n.id <- dom.n %>% select(-c(PAT_ID,ENC_DATE,sum)) > 0
dom.n.id
dom.n.id <- which(tibble(dom.n.id) %>% apply(1,sum) == 12)
dom.n.id
dom.n
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, comment = NA)
library(tidyverse)
library(readxl)
library(lubridate)
# Read in data
#path <- "C:\\Users\\Jonathan\\Dropbox\\Caring Health\\Data\\Caring_Data_V2.xlsx"
path <- "/Users/jonathanluu/Library/CloudStorage/Dropbox/Caring Health/Data/Caring_Data_V2.xlsx"
dat <- lapply(excel_sheets(path = path), function(x)
read_excel(path = path, sheet = x, col_types = c(rep("guess",20),"text","logical")))
dat <- bind_rows(dat)
# Create categorical visit
dat <- dat %>% mutate(cat_visit = case_when(num_of_visits <= 1 ~ 0,
num_of_visits > 1 & num_of_visits <= 3 ~ 1,
num_of_visits > 3 & num_of_visits <= 8 ~ 2,
num_of_visits > 8 ~ 3))
# Create categorical age
dat <- dat %>% mutate(cat_age = case_when(Age <= 39 ~ 0,
Age > 39 & Age <= 64 ~ 1,
Age > 64 ~ 2))
# Rename some columns
dat <- rename(dat, Language = "LANGUAGE_NAME", Ethnicity = "ETHNIC_GROUP", Race = "RACE")
# Format dates
dat <- dat %>% mutate(ENC_DATE = ymd(ENC_DATE), Last_Visit_Date = ymd(Last_Visit_Date))
# Get distinct IDs
dat.distinct <- dat %>% distinct(PAT_ID, .keep_all = T)
# Create new dataset showing number of responses by id and encounter
dat.encounter <- dat %>% count(PAT_ID, DOMAIN_GRP, ENC_DATE) %>% mutate_all(na_if,"") %>%
pivot_wider(names_from = DOMAIN_GRP, values_from = n)
dat.encounter <- dat.encounter %>% mutate_if(is.integer, ~replace(.,is.na(.),0))
dat.encounter <- dat.encounter %>% select(-"NA") %>% mutate(sum = rowSums(across(where(is.numeric))))
covar <- dat.distinct %>% select(PAT_ID, cat_age, cat_visit, Race, Ethnicity, Language, HasChargeVisit)
dat.encounter <- merge(dat.encounter,covar,all.x=T)
screen.count <- dat.encounter %>% filter(sum>0) %>% count(PAT_ID)
dat.encounter <- full_join(dat.encounter, screen.count, by="PAT_ID") %>% rename("n_encounter" = "n") # Append number of encounters to dataset
# Create dataset of those screened
response_ids <- dat.encounter %>% filter(sum > 0) %>% distinct(PAT_ID) %>% c() %>% .[[1]]
dat.screened <- dat %>% filter(PAT_ID %in% response_ids)
dat.distinct.screened <- dat.screened %>% distinct(PAT_ID, .keep_all = T)
# Screening questions answered
screeningNum <- function(category){
uniq <- dat.encounter %>% select(category, PAT_ID)
uniq[uniq[,1]>0,] %>% distinct(PAT_ID, .keep_all=T) %>% nrow()
}
categories <- colnames(dat.encounter)[3:14]
sapply(categories, screeningNum)
dat.encounter %>% filter(sum>0)
# People who answered all questions in these 4 categories: Housing, transportation, food, and stress
group.n <- dat.encounter %>% filter(sum>0) %>% select("Food Insecurity","Housing","Transportation","Stress and Social Isolation") > 0
group.n
# People who answered all questions in these 4 categories: Housing, transportation, food, and stress
group.n <- dat.encounter %>% filter(sum>0)
group.n
dat.encounter %>% filter(sum>0) %>% filter(c("Food Insecurity","Housing","Transportation","Stress and Social Isolation") > 0)
# People who answered all questions in these 4 categories: Housing, transportation, food, and stress
group.n <- dat.encounter %>% filter(sum>0) %>% filter("Food Insecurity" > 0)
group.n
# People who answered all questions in these 4 categories: Housing, transportation, food, and stress
group.n <- dat.encounter %>% filter(sum>0)
group.n.id <- dat.encounter %>% select("Food Insecurity","Housing","Transportation","Stress and Social Isolation") > 0
group.n.id <- which(tibble(group.n.id) %>% apply(1,sum) == 4)
group.n <- dat.encounter %>% slice(group.n.id)
length(unique(group.n$PAT_ID)) # 5996 individuals with these 4 domain questions answered
group.n
categories
# People who answered a question in all domains
dom.n <- dat.encounter %>% filter(sum>0)
dom.n.id <- dom.n %>% select(categories) > 0
dom.n.id <- dom.n %>% select(all_of(categories)) > 0
dom.n.id
# People who answered a question in all domains
dom.n <- dat.encounter %>% filter(sum>0)
dom.n.id <- dom.n %>% select(all_of(categories)) > 0
dom.n.id <- which(tibble(dom.n.id) %>% apply(1,sum) == 12)
dom.n <- dom.n %>% slice(dom.n.id)
length(unique(dom.n$PAT_ID)) # 2120 individuals with all domain questions answered
dom.n
length(unique(dom.n$PAT_ID)) # 2120 individuals with all domain questions answered
dat$MEAS_DISP_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
temp <- dat$MEAS_DISP_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
View(temp)
write.csv(temp, file="questions")
dat$MEAS_DISP_NAME
dat$MEAS_DISP_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
dat.screened$MEAS_DISP_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
dat.screened
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T)
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% select(MEAS_DISP_NAME) %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% .$MEAS_DIS_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% .$MEAS_DISP_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
temp <- dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% .$MEAS_DISP_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
write_csv(temp, "numbers.csv")
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T)
# Collected by
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% .$TakenProviderType %>% table() %>% sort(decreasing=T) %>%
as.tibble() %>% rename("Taken Provider Type"=".")
View(dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T))
allQ <- dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% .$MEAS_DISP_NAME %>% table() %>% sort(decreasing=T) %>%
as_tibble() %>% rename(Question=".")
allQ
allQ$Question
allQ$Question[1]
# Collected by
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% filter(MEAS_DISP_NAME == allQ$Question[1])
# Collected by
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% filter(MEAS_DISP_NAME == allQ$Question[1]) %>% .$TakenProviderType %>% table() %>% sort(decreasing=T) %>% as.tibble() %>% rename("Taken Provider Type"=".")
# Collected by
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% filter(MEAS_DISP_NAME == allQ$Question[1]) %>% .$TakenProviderType %>% table() %>% head(n=1)
# Collected by
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>% filter(MEAS_DISP_NAME == allQ$Question[1]) %>% .$TakenProviderType %>% table() %>% sort(decreasing=T) %>% head(n=1)
# Collected by
collectNum <- function(question){
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == question) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1)
}
collectNum(allQ[1])
allQ
allQ$Question[1]
collectNum(allQ$Question[1])
sapply(allQ$Question, collectNum)
sapply(allQ$Question, collectNum)
tibble(sapply(allQ$Question, collectNum))
# Collected by
collectNum <- function(question){
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == question) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1) %>% colnames()
}
collectNum(allQ$Question[1])
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == allQ$Question[1]) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1)
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == allQ$Question[1]) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1) %>% colnames()
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == allQ$Question[1]) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1) %>% names()
# Collected by
collectNum <- function(question){
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == question) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1) %>% names()
}
tibble(sapply(allQ$Question, collectNum))
# Collected by
collectNum <- function(question){
result <- dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == question) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1) %>% names()
return(c(question, result))
}
tibble(sapply(allQ$Question, collectNum))
# Collected by
collectNum <- function(question){
dat.screened %>% distinct(PAT_ID, MEAS_DISP_NAME, .keep_all = T) %>%
filter(MEAS_DISP_NAME == question) %>% .$TakenProviderType %>%
table() %>% sort(decreasing=T) %>% head(n=1) %>% names()
}
sapply(allQ$Question, collectNum)
lapply(allQ$Question, collectNum)
sapply(allQ$Question, collectNum)
